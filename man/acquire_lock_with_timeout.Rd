% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/redlock.R
\name{acquire_lock_with_timeout}
\alias{acquire_lock_with_timeout}
\title{Acquire a Redis Lock with Timeout}
\usage{
acquire_lock_with_timeout(
  conn,
  lockname,
  acquire_timeout = 10,
  lock_timeout = 10
)
}
\arguments{
\item{conn}{A connection object to Redis created with the `redux` package.}

\item{lockname}{A string representing the name of the lock to acquire.}

\item{acquire_timeout}{Numeric value (in seconds) specifying how long
to wait to acquire the lock. Default is 10 seconds.}

\item{lock_timeout}{Numeric value (in seconds) specifying how long
the lock should remain valid. Default is 10 seconds.}
}
\value{
A string containing the unique identifier for the lock if
  acquired successfully; otherwise, returns NULL.
}
\description{
This function attempts to acquire a lock in Redis with a specified
timeout for acquiring the lock and a timeout for how long the lock
should be held.
}
\examples{
\dontrun{
conn <- redux::redis()  # Create a connection to Redis
lock_id <- acquire_lock_with_timeout(conn, "my_lock_name")
if (!is.null(lock_id)) {
  # Lock acquired successfully, proceed with critical section
  # Release the lock or perform actions here
  }
}
}
